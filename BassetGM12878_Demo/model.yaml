# TODO - optionally create a model.py file - if model type is custom...

# TODO - model files
# ifelse - different model types - specify the arguments
type: keras
args:
    weights: model_files/model.weights.h5
    arch: model_files/model.arch.json
    # Note: if you saved the model with model.save(), you can omit `arch: ...`
default_dataloader: . # path to the directory
info:
    authors:
        - name: Nancy Xu
          github: xnancy
          email: xnancy@stanford.edu
        - name: Johnny Israeli 
          github: jisraeli 
          email: johnnyisraeli@gmail.com 
    contributors:
        - name: Nancy Xu
          github: xnancy
          email: xnancy@stanford.edu    
    doc: >
    This is a convolutional architecture based on the Basset model from 
    Kelley, Snoek, Rinn (2016). We learn the regulatory code of the accessible
    genome with CNNs. The model is an example of training Basset on a single
    cell type (GM12878), which acts as the target. It categorically predicts 
    binary chromatin accessbility features from a 1000 base pair DNA sequence, and
    is trained on publicly available ENCODE and Roadmap Epigenomics
    data. The input of the tensor must be of type (N, 1000, 4) for N samples, 1000bp 
    window size and 4 nucleotides. Per sample, a single binary label of 
    of chromatin accessbility is predicted. 
    cite_as: https://doi.org/10.1101/gr.200535.115
    trained_on: ENCODE chromatin profiles (processed by Kundaje Lab) 
    tags:
        - DNA accessibility
dependencies:
    conda:
        - h5py 
    pip:
        - tensorflow
        - keras==1.2.2
schema:
    inputs:
        data/genome_data_dir:
            shape: (1000,4)
            doc: "1000 base pair sequence of one-hot encoding ACGT"
    targets:
        shape: (1,)
        doc: "Binary 0/1 output for chromatin accessbility in the designated range. 0 = inaccessible, 1 = accessible." 
